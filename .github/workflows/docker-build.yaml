name: Docker Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Check build summary support
        run: echo "Build summary supported!"
      
      # Test Build: Nur AMD64, mit load
      - name: Build Docker image for testing
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64  # Nur eine Platform für Test
          load: true              # Lädt ins lokale Docker
          tags: gmcapsule:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}
            GMCAPSULE_VERSION=0.3.2
      
      - name: Inspect image labels
        run: |
          echo "Checking image metadata..."
          docker inspect gmcapsule:test --format='{{json .Config.Labels}}' | jq
      
      - name: Test container startup
        run: |
          docker run -d --name gmcapsule-test gmcapsule:test
          sleep 5
          docker logs gmcapsule-test
          docker ps -a
          docker stop gmcapsule-test
      
      - name: Test Gemini port
        run: |
          docker run -d --name gmcapsule-port-test -p 1965:1965 gmcapsule:test
          sleep 5
          # Optional: Teste ob Port offen ist
          docker logs gmcapsule-port-test
          docker stop gmcapsule-port-test
      
      - name: Test health check
        run: |
          docker run -d --name gmcapsule-health-test gmcapsule:test
          sleep 10
          # Prüfe Health Status
          docker inspect --format='{{.State.Health.Status}}' gmcapsule-health-test || echo "No health check defined"
          docker stop gmcapsule-health-test
      
      - name: Test user permissions
        run: |
          echo "Checking if container runs as non-root user..."
          docker run --rm gmcapsule:test id
          docker run --rm gmcapsule:test ls -la /srv/gemini
      
      - name: Cleanup test containers
        if: always()
        run: |
          docker rm -f gmcapsule-test gmcapsule-port-test gmcapsule-health-test 2>/dev/null || true
